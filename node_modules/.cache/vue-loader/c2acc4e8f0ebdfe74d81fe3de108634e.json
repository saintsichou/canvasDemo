{"remainingRequest":"/Users/liqiang/Desktop/demos/canvas/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liqiang/Desktop/demos/canvas/src/views/About.vue?vue&type=style&index=0&id=039c5b43&scoped=true&lang=css&","dependencies":[{"path":"/Users/liqiang/Desktop/demos/canvas/src/views/About.vue","mtime":1583157979025},{"path":"/Users/liqiang/Desktop/demos/canvas/node_modules/css-loader/dist/cjs.js","mtime":1581399667667},{"path":"/Users/liqiang/Desktop/demos/canvas/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1583030647440},{"path":"/Users/liqiang/Desktop/demos/canvas/node_modules/postcss-loader/src/index.js","mtime":1581399667792},{"path":"/Users/liqiang/Desktop/demos/canvas/node_modules/cache-loader/dist/cjs.js","mtime":1581399666072},{"path":"/Users/liqiang/Desktop/demos/canvas/node_modules/vue-loader/lib/index.js","mtime":1583030647440}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojY2FuewogIGJvcmRlcjoxcHggc29saWQgIzAwMDsKICBjdXJzb3I6IHBvaW50ZXI7Cn0K"},{"version":3,"sources":["About.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA;AACA","file":"About.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n\n    <HelloWorld msg=\"Welcome to Your Vue.js App\"/>\n    <canvas id=\"can\" width=\"550\" height=\"350\" @click=\"draw\">浏览器不支持canvas,请切换</canvas>\n    <div><input type=\"text\" v-model=\"input\"></div> <button @click=\"verify\">验证</button>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport HelloWorld from '@/components/HelloWorld.vue'\n\nexport default {\n  name: 'Home',\n  components: {\n    HelloWorld\n  },\n  data() {\n    return {\n      input:'',\n      calc:{}\n\n    }\n  },\n  mounted () {\n    this.draw()\n  },\n  methods: {\n    //绘制图形\n    draw() {\n      let canvas = document.getElementById('can');\n      let ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n      let sCode = \"a,b,c,d,e,f,g,h,i,j,k,m,n,p,q,r,s,t,u,v,w,x,y,z,A,B,C,E,F,G,H,J,K,L,M,N,P,Q,R,S,T,W,X,Y,Z,1,2,3,4,5,6,7,8,9,0\";\n      let aCode = sCode.split(\",\");\n      ctx.font = \"48px serif\";\n      ctx.textAlign = \"center\";\n      let datas=[]\n      for (let i = 0; i < 4; i++) {\n          let results = aCode[Math.floor(Math.random()*aCode.length)]//取随机数\n          // var x = canvas.width/2-50 + i * 50;//文字在canvas上的x坐标\n          // var y = canvas.height/2;//文字在canvas上的y坐标\n          var deg = Math.floor(Math.random() * 15);\n          // ctx.translate(x, y);\n          console.log(deg)\n          ctx.rotate(deg*Math.PI/180);\n          datas.push(results)\n          ctx.fillText(results ,canvas.width/2-60+i*60, canvas.height/2) //绘制\n          ctx.rotate(-deg*Math.PI/180);\n          // ctx.translate(-x, -y);\n          ctx.fillStyle = this.color16();\n      }\n      for (let i = 0; i <= 5; i++) { //验证码上显示线条\n          ctx.strokeStyle = this.color16();\n          ctx.beginPath();\n          ctx.moveTo(Math.random() * canvas.width, Math.random() * canvas.height);\n          ctx.lineTo(Math.random() * canvas.width, Math.random() * canvas.height);\n          ctx.stroke();\n      }\n      for (let i = 0; i <= 30; i++) { //验证码上显示小点\n          ctx.strokeStyle = this.color16();\n          ctx.beginPath();\n          var x = Math.random() * canvas.width;\n          var y = Math.random() * canvas.height;\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + 1, y + 1);\n          ctx.stroke();\n        }\n      this.calc = datas\n    },\n    color16(){//十六进制颜色随机\n\t\t\tvar r = Math.floor(Math.random()*256);\n\t\t\tvar g = Math.floor(Math.random()*256);\n\t\t\tvar b = Math.floor(Math.random()*256);\n\t\t\tvar color = '#'+r.toString(16)+g.toString(16)+b.toString(16);\n\t\t\treturn color;\n    },\n    //验证\n    verify(){\n      if(this.calc){\n        let str = this.calc.join('').toUpperCase()\n        console.log(str)\n        this.input.toUpperCase() == str ? alert('对') : alert('错误') && this.draw()\n      }else{\n        alert('请输入验证码')\n      }\n    }\n  },\n}\n</script>\n<style scoped>\n  #can{\n    border:1px solid #000;\n    cursor: pointer;\n  }\n</style>"]}]}